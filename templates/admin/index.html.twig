{% extends 'base.html.twig' %} {% block title %}Admin{% endblock %} {% block
body %}
<style>
    .h-full {
        height: 80vh;
    }
    #myChart {
        width: 100%;
        height: 100%;
    }
</style>
<h1 class="ml-4 mt-2">Admin Dashboard</h1>

<div class="container">
    <div class="h-full">
        <canvas width="400" height="100" id="myChart"></canvas>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        const reclamations = JSON.parse(
            `{{ reclamations | json_encode | raw }}`
        );

        // Initialize counters for treated and pending reclamations for each service
        const treatedReclamationsCount = {};
        const pendingReclamationsCount = {};

        // Iterate through reclamations
        reclamations.forEach((reclamation) => {
            const serviceName = reclamation.nomservcie;

            // Check if the service name is valid
            // Increment counters based on reclamation status
            if (reclamation.status === "Traitée") {
                treatedReclamationsCount[serviceName] =
                    (treatedReclamationsCount[serviceName] || 0) + 1;
            } else if (reclamation.status === "En Cour") {
                pendingReclamationsCount[serviceName] =
                    (pendingReclamationsCount[serviceName] || 0) + 1;
            }
        });

        // Display the results
        console.log("Treated Reclamations Count:");
        console.log(treatedReclamationsCount);

        console.log("\nPending Reclamations Count:");
        console.log(pendingReclamationsCount);

        const data = {
            labels: Object.keys(pendingReclamationsCount).concat(
                Object.keys(treatedReclamationsCount).map(
                    (serviceName) => serviceName + " (traitée)"
                )
            ),
            datasets: [
                {
                    data: Object.values(pendingReclamationsCount).concat(
                        Object.values(treatedReclamationsCount)
                    ),
                    backgroundColor: [
                        "rgba(75, 192, 192, 0.5)",
                        "rgba(255, 99, 132, 0.5)",
                        "rgba(255, 205, 86, 0.5)",
                        "rgba(54, 162, 235, 0.5)",
                        "rgba(153, 102, 255, 0.5)",
                        "rgba(255, 159, 64, 0.5)",
                        "rgba(255, 99, 132, 0.5)",
                        "rgba(255, 205, 86, 0.5)",
                    ],
                },
            ],
        };

        // Get the canvas element
        const ctx = document.getElementById("myChart");

        // Create a pie chart
        const myPieChart = new Chart(ctx, {
            type: "pie",
            data: data,
        });
    </script>
</div>
{% endblock %}
